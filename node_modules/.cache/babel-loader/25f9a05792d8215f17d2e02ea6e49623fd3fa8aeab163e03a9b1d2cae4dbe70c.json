{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonas\\\\Desktop\\\\React\\\\Food Order App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const retrieveMeals = async () => {\n    const response = await fetch(\"https://taskapp-9191a-default-rtdb.europe-west1.firebasedatabase.app/meals/-NZPYFJ04Je_dPvFEM7f\");\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    const data = await response.json();\n    const loadedMeals = [];\n    for (const key in data) {\n      loadedMeals.push({\n        id: key,\n        name: data[key].name,\n        price: data[key].price,\n        description: data[key].description\n      });\n    }\n    setMeals(loadedMeals);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    retrieveMeals(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes[\"loading-meals-text\"],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes[\"error-meals-text\"],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.name,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"EEVaDHGxsJB16RL31KUqGquPBTE=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","useEffect","useState","Card","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","error","setError","retrieveMeals","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","price","description","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/Jonas/Desktop/React/Food Order App/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from \"./AvailableMeals.module.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const retrieveMeals = async () => {\r\n    const response = await fetch(\r\n      \"https://taskapp-9191a-default-rtdb.europe-west1.firebasedatabase.app/meals/-NZPYFJ04Je_dPvFEM7f\"\r\n    );\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Something went wrong!');\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    const loadedMeals = [];\r\n\r\n    for (const key in data) {\r\n      loadedMeals.push({\r\n        id: key,\r\n        name: data[key].name,\r\n        price: data[key].price,\r\n        description: data[key].description,\r\n      });\r\n    }\r\n    setMeals(loadedMeals);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n      retrieveMeals(error => {\r\n        setIsLoading(false);\r\n        setError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes[\"loading-meals-text\"]}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <section className={classes[\"error-meals-text\"]}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.name}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}